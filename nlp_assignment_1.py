# -*- coding: utf-8 -*-
"""NLP Assignment 1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hShYO3hiCcAqY2Ydji3tZYMzvNbdh7GX
"""

import nltk
from nltk.tokenize import word_tokenize
nltk.download('punkt')
nltk.download('stopwords')
nltk.download('wordnet')

"""initialising of NLTK and tokenization and downloading required packages

Are  you  fascinated  by  the  amount  of  text  data  available  on  the  internet?  Are  you looking  for  ways  to  work  with  this  text  data  but  aren’t  sure  where  to  begin? Machines, after all, recognize numbers, not the letters of our language. And that can be a tricky landscape to navigate in machine learning.

Split the above paragraph into 

Q1.sentences and 

Q2.words
"""

para="Are  you  fascinated  by  the  amount  of  text  data  available  on  the  internet?  Are  you looking  for  ways  to  work  with  this  text  data  but  aren’t  sure  where  to  begin? Machines, after all, recognize numbers, not the letters of our language. And that can be a tricky landscape to navigate in machine learning."

"""splitting into sentences"""

sen=nltk.sent_tokenize(para)
sen

"""splitting into words"""

words=word_tokenize(para)
print(words)

print("\n\n")
words

"""Q3. Find (i)stem and (ii)lemma words for the given words?

"cats"

"trouble"

"troubling"

"troubled"

“having”

“Corriendo”

“at”

“was”
"""

lists=["cats","trouble","troubling","troubled","having","Corriendo","at","was"]

"""(i) stem words"""

from nltk.stem import PorterStemmer

ps = PorterStemmer()
for word in lists:
	stem_rootWord=ps.stem(word)
	print(stem_rootWord)

"""(ii) lemma words"""

from nltk.stem import 	WordNetLemmatizer
wl = WordNetLemmatizer()
for w in lists:
		print(wl.lemmatize(w))

"""Q4. Find stop words from the given paragraph?

The NLTK library  is  one  of  the  oldest  and  most  commonly  used  Python  libraries  for Natural Language Processing. NLTK supports stop word removal, and you can find the list of stop words in the  corpus  module. To remove stop words from a sentence, you can divide your text into words and then remove the word if it exits in the list of stop words provided by NLTK.
"""

text="The NLTK library  is  one  of  the  oldest  and  most  commonly  used  Python  libraries  for Natural Language Processing. NLTK supports stop word removal, and you can find the list of stop words in the  corpus  module. To remove stop words from a sentence, you can divide your text into words and then remove the word if it exits in the list of stop words provided by NLTK."
token=word_tokenize(text)

"""finding stopwords """

from nltk.corpus import stopwords
stops = set(stopwords.words('english'))


ss=[]
for w in token:
    if w in stops:
        ss.append(w)

print("stopwords with duplicate words ")
print(ss)

new_stop = []
[new_stop.append(x) for x in ss if x not in new_stop]

print("\nstopwords without dupication of words")
print(new_stop)

"""Q5. From the above paragraph print frequency of each word using NLTK?"""

from nltk.probability import FreqDist

fdist = FreqDist(token)

for k in sorted(fdist):
    print("%s: %s" % (k, fdist[k]))